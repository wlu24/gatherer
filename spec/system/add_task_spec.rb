require 'rails_helper'

RSpec.describe 'adding a new task' do
  let!(:project) { create(:project, name: 'Project Bluebook') }
  let!(:task1) { create(
    :task, project: project, title: 'Search Sky', size: 1, project_order: 1) }
  let!(:task2) { create(
    :task, project: project, title: 'Use Telescope', size: 1, project_order: 2) }

  it 'can add and reorder a task' do
    # The route generated by the visit method is always an HTTP GET. If you want
    # to simulate a POST or any other kind of HTTP method, the recommended
    # mechanism in Capybara is to navigate to a link or form button on the web
    # page that triggers the desired interaction.
    visit project_path(project)

    fill_in 'Task', with: 'Find UFOs'
    select '2', from: 'Size'
    click_on 'Add Task'
    expect(current_path).to eq(project_path(project))

    within("#task_3") do
      expect(page).to have_selector(".name", text: 'Find UFOs')
      expect(page).to have_selector(".size", text: '2')
      expect(page).not_to have_selector('a', text: 'Down')
      click_on('Up')
    end
    expect(current_path).to eq(project_path(project))

    within("#task_2") do
      expect(page).to have_selector(".name", text: 'Find UFOs')
    end
  end

end
